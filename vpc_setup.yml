- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import vpc variables
      include_vars: vars/vpc_setup

    - name: create vpc for vprofile
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

 #   - debug:
 #      var: vpcout

    - name: create public subnet in zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PubSub1
      register: pubsub1_out

 #   - debug:
  #      var: pubsub1_out


    - name: create public subnet in zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PubSub2
      register: pubsub2_out

    - name: create public subnet in zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PubSub3
      register: pubsub3_out

    - name: create private subnet in zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PrivSub1
      register: PrivSub1_out

    - name: create private subnet in zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PrivSub2
      register: PrivSub2_out


    - name: create private subnet in zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: vprofile-PrivSub3
      register: PrivSub3_out

    - name: internet gateway setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-IGW
      register: IGW_out

    - name: setting route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: public-Route
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{IGW_out.gateway_id}}"
      register: routePub_out

    - name: create NAT gateway
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NatGW_out

    - name: setting route table for private subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: private-Route
        subnets:
          - "{{PrivSub1_out.subnet.id}}"
          - "{{PrivSub2_out.subnet.id}}"
          - "{{PrivSub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{NatGW_out.nat_gateway_id}}"
      register: routePriv_out


    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - PrivSub1_out.subnet.id
        - PrivSub2_out.subnet.id
        - PrivSub3_out.subnet.id
        - IGW_out.gateway_id
        - NatGW_out.nat_gateway_id
        - routePub_out_table.id
        - routePriv_out_table.id

    - set_fact:
         vpcoutid: "{{vpcout.vpc.id}}"
         pubsub1id: "{{pubsub1_out.subnet.id}}"
         pubsub2id: "{{pubsub2_out.subnet.id}}"
         pubsub3id: "{{pubsub3_out.subnet.id}}"
         PrivSub1id: "{{PrivSub1_out.subnet.id}}"
         PrivSub2id: "{{PrivSub2_out.subnet.id}}"
         PrivSub3id: "{{PrivSub3_out.subnet.id}}"
         IGW_outid: "{{IGW_out.gateway_id}}"
         NatGW_outid: "{{NatGW_out.nat_gateway_id}}"
         routePubid: "{{routePub_out.route_table.id}}"
         routePrivid: "{{routePriv_out.route_table.id}}"
         cacheable: yes

    - name:
      copy:
        content: "vpcoutid: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nPrivSub1id: {{PrivSub1_out.subnet.id}}\nPrivSub2id: {{PrivSub2_out.subnet.id}\nPrivSub3id: {{PrivSub3_out.subnet.id}}\nIGW_outid: {{IGW_out.gateway_id}}\nNatGW_outid: {{NatGW_out.nat_gateway_id}}\nroutePubid: {{routePub_out_table.id}}\nroutePrivid: {{routePriv_out_table.id}}"
        dest: vars/output_vars



